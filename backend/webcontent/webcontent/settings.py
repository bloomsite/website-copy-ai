"""
Django settings for webcontent project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os 

from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-0l4f^(9e-xwi_!zev%050-&q3!j=0*$37@%le(@kwth86b&z66"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders", 
    "users", 
    "emails", 
    "forms",
    "content_request",
    'rest_framework',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "webcontent.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "webcontent.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


############## CUSTOM SETTINGS ##############

TIME_ZONE = "Europe/Brussels"
USE_TZ = True 


# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "handlers": {
#         "console": {
#             "class": "logging.StreamHandler",
#         },
#         "null": {
#             "class": "logging.NullHandler",
#         },
#     },
#     "loggers": {
#         "django.request": {
#             "handlers": ["null"],   # swallow the "Internal Server Error" + traceback
#             "level": "ERROR",
#             "propagate": False,
#         },
#         "django.server": {
#             "handlers": ["console"],  # still show the short access log line
#             "level": "INFO",
#             "propagate": False,
#         },
#     },
# }


# Custom User Model
AUTH_USER_MODEL = "users.User"


# CORS Headers 
CORS_ALLOW_ALL_ORIGINS = True

# Restframework Settings 
REST_FRAMEWORK = {
    
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication', 
    ],
     'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

# JWT Settings 
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

# COSMOS DB SETTINGS 
AZURE_COSMOS_ENDPOINT = os.getenv('AZURE_COSMOS_ENDPOINT')
AZURE_COSMOS_KEY = os.getenv('AZURE_COSMOS_KEY')

AZURE_COSMOS_DATABASE_USER_DATA = os.getenv('AZURE_COSMOS_DATABASE_USER_DATA')
AZURE_COSMOS_DATABASE_FORM_DATA = os.getenv('AZURE_COSMOS_DATABASE_FORM_DATA')

AZURE_COSMOS_CONTAINER_USER_PROFILES = os.getenv('AZURE_COSMOS_CONTAINER_USER_PROFILES')
AZURE_COSMOS_CONTAINER_FORM_DEFINITIONS = os.getenv('AZURE_COSMOS_CONTAINER_FORM_DEFINITIONS')
AZURE_COSMOS_CONTAINER_FORM_PROGRESSION = os.getenv('AZURE_COSMOS_CONTAINER_FORM_PROGRESSION')
AZURE_COSMOS_CONTAINER_FORM_CONFIRMATION = os.getenv('AZURE_COSMOS_CONTAINER_FORM_CONFIRMATION')

# Email server settings 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587 
EMAIL_USE_TLS = True 
DEFAULT_FROM_EMAIL = "Bloom Online Platform"
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_APP_PASS_KEY')

COSMOS = {
    # Authentication
    'ENDPOINT': AZURE_COSMOS_ENDPOINT,
    'KEY': AZURE_COSMOS_KEY,

    # Databases 
    'DATABASE_USER_DATA': AZURE_COSMOS_DATABASE_USER_DATA,
    'DATABASE_FORM_DATA': AZURE_COSMOS_DATABASE_FORM_DATA, 

    # Containers
    'CONTAINER_USER_PROFILES': AZURE_COSMOS_CONTAINER_USER_PROFILES,
    'CONTAINER_FORM_DEFINITIONS': AZURE_COSMOS_CONTAINER_FORM_DEFINITIONS, 
    'CONTAINER_FORM_PROGRESSION': AZURE_COSMOS_CONTAINER_FORM_PROGRESSION, 
    'CONTAINER_FORM_CONIFRMATION': AZURE_COSMOS_CONTAINER_FORM_CONFIRMATION, 
}

STATIC_ROOT = BASE_DIR / "staticfiles"
FRONTEND_URL = "http://localhost:5173"